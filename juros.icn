# Cálculo dos juros, sendo que precisa de parcelas pra isso
# Versão 0.1: 07/07/2024: versão feita sem muito conhecimento de Icon

# globais para simplificar as chamadas
global Quantidade
global Composto
global Periodo
global Pagamentos
global Pesos

# calcula a somatória do array Pesos[]
procedure getPesoTotal()
    acumulador := 0.0
    every indice := 1 to Quantidade do acumulador +:= Pesos[indice]
    return acumulador
end

# calcula o acréscimo a partir dos juros e parcelas
procedure jurosParaAcrescimo(juros)
    pesoTotal := getPesoTotal()
    if (juros <= 0.0) | (Quantidade < 1) | (Periodo <= 0.0) | (pesoTotal <= 0.0) then return 0.0
    acumulador := 0.0

    every indice := 1 to Quantidade do {
        if Composto > 0
            then acumulador +:= Pesos[indice] / (1.0 + juros / 100.0) ^ (Pagamentos[indice] / Periodo)
            else acumulador +:= Pesos[indice] / (1.0 + juros / 100.0 * Pagamentos[indice] / Periodo)
    }

    return (pesoTotal / acumulador - 1.0) * 100.0
end

# calcula os juros a partir do acréscimo e parcelas
procedure acrescimoParaJuros(acrescimo, precisao, maxIteracoes, maxJuros)
    pesoTotal := getPesoTotal()
    if (acrescimo <= 0.0) | (Quantidade < 1) | (Periodo <= 0.0) | (pesoTotal <= 0.0) | (precisao < 1) | (maxIteracoes < 1) | (maxJuros <= 0.0) then return 0.0
    minJuros := 0.0
    medJuros := maxJuros / 2.0
    minDiferenca := 0.1 ^ precisao

    every indice := 1 to maxIteracoes do {
        medJuros := (minJuros + maxJuros) / 2.0
        if (maxJuros - minJuros) < minDiferenca then return medJuros
        if jurosParaAcrescimo(medJuros) < acrescimo then minJuros := medJuros else maxJuros := medJuros
    }

    return medJuros
end

procedure main()
    # inicializa os valores globais
    Quantidade := 3
    Composto := 1
    Periodo := 30.0
    Pagamentos := [30.0, 60.0, 90.0]
    Pesos := [1.0, 1.0, 1.0]

    # calcula e guarda os valores dos resultados das funções
    pesoTotal := getPesoTotal()
    acrescimoCalculado := jurosParaAcrescimo(3.0)
    jurosCalculado := acrescimoParaJuros(acrescimoCalculado, 15, 100, 50.0)

    # imprime os resultados
    write("Peso total = ", pesoTotal)
    write("Acrescimo = ", acrescimoCalculado)
    write("Juros = ", jurosCalculado)
end